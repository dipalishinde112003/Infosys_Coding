class Solution {
  public:
    string MaxNumber(vector<int>& arr) {
        // code here.
       sort(arr.begin(), arr.end());

        // Build the string from the sorted numbers in reverse order
        string result = "";
        for (int i = arr.size() - 1; i >= 0; i--) {
            result += to_string(arr[i]); // Append the current number as a string
        }

        return result;
    }
};

Given an array arr[] of numbers from 0 to 9. Your task is to rearrange elements of the array such that after combining all the elements of the array, the number formed is maximum.

Examples:

Input: arr[] = [9, 0, 1, 3, 0]
Output: 93100
Explanation: Largest number is 93100 which can be formed from array digits.

Input: arr[] = [1, 2, 3]
Output: 321

Expected Time Complexity: O(n)
Expected Auxiliary Space: O(n)

Constraints:
1 <= arr.size() <= 106
0 <= arr[i] <= 9
